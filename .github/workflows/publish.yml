name: publish my library

env:
    CI: true

on:
    push:
        branches:
            - main
        tags:
            - '!*'

jobs:
    publish:
        name: Setup
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v2

            # Nodeのバージョンを指定
            - name: setup node
              uses: actions/setup-node@v1
              with:
                  node-version: 20.0.0
                  registry-url: https://npm.pkg.github.com

            - uses: pnpm/action-setup@v2.2.2
              with:
                  version: 8.9.0

            # .npmrcファイルを作成し、PATを設定
            - name: setup .npmrc
              run: |
                  echo "//npm.pkg.github.com/:_authToken=${{ secrets.PAT }}" > .npmrc
                  echo "@tsht99:registry=https://npm.pkg.github.com" >> .npmrc

            # 必要なモジュール（typescript）をインストール
            - name: install node_modules
              run: pnpm install

            # トランスパイルを実行
            - name: build
              run: cd packages/main && pnpm build

            # バージョン情報を環境変数として設定
            - name: set version to env
              run: cd packages/main && node -p -e '`VERSION=${require("./package.json").version}`' >> $GITHUB_ENV

            # バージョンが既に存在するかチェック
            - name: check version exists
              id: check_version
              run: |
                  VERSION_EXISTS=$(curl --silent --head --fail https://npm.pkg.github.com/@tsht99/main/v${{ env.VERSION }} > /dev/null && echo "true" || echo "false")
                  echo "::set-output name=version_exists::$VERSION_EXISTS"

            # パッケージとして公開する
            - name: publish
              run: cd packages/main && pnpm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              if: steps.check_version.outputs.version_exists == 'false'

            # バージョン情報持つタグを付与する
            - name: add version tag
              uses: pkgdeps/git-tag-action@v2
              with:
                  version: ${{ env.VERSION }}
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  github_repo: ${{ github.repository }}
                  git_commit_sha: ${{ github.sha }}
                  git_tag_prefix: 'v'
              if: steps.check_version.outputs.version_exists == 'false'
